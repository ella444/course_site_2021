import os
import pathlib
from typing import Union, Tuple
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np


class QuestionnaireAnalysis:
    """
    Reads and analyzes data generated by the questionnaire experiment.
    Should be able to accept strings and pathlib.Path objects.
    """

    def __init__(self, data_fname: Union[pathlib.Path, str]):
        self.data_fname = data_fname
        self.read_data()
        print()

    def read_data(self):
        """Reads the json data located in self.data_fname into memory, to
        the attribute self.data.
        """
        if not os.path.exists(self.data_fname):
            raise ValueError
        try:
            self.data = pd.read_json(self.data_fname)
        except ValueError as e:
            self.data = None

    def show_age_distrib(self) -> Tuple[np.ndarray, np.ndarray]:
        """Calculates and plots the age distribution of the participants.

        Returns
        -------
        hist : np.ndarray
          Number of people in a given bin
        bins : np.ndarray
          Bin edges
            """
        hist, bins = np.histogram(self.data['age'].dropna().values, bins=range(0, 110, 10),)
        # plt.hist(bins[:-1], bins, weights=hist)
        # plt.show()
        return hist.astype(float), bins

    def remove_rows_without_mail(self) -> pd.DataFrame:
        """Checks self.data for rows with invalid emails, and removes them.

        Returns
        -------
        df : pd.DataFrame
          A corrected DataFrame, i.e. the same table but with the erroneous rows removed and
          the (ordinal) index after a reset.
            """
        self.data.dropna()
        return self.data[self.data['email'].notna()]

    def fill_na_with_mean(self) -> Tuple[pd.DataFrame, np.ndarray]:
        """Finds, in the original DataFrame, the subjects that didn't answer
        all questions, and replaces that missing value with the mean of the
        other grades for that student.

        Returns
        -------
        df : pd.DataFrame
          The corrected DataFrame after insertion of the mean grade
        arr : np.ndarray
              Row indices of the students that their new grades were generated
            """
        pass

if __name__ == '__main__':
    q = QuestionnaireAnalysis('data.json')
    # hist, bins = q.show_age_distrib()
    df = q.remove_rows_without_mail()



